# -*- mode: ruby -*-

CPP_COMPILER = "g++"
C_COMPILER = "gcc -std=c99"
GTEST_DIR = "gtest-1.7.0"
SRC_DIR = "../src"
LIB = ["libgtest.a", "libgtest_main.a"]



# test targets
#--------------------

TESTS = {
  "sample" => ["sample.o"],

  "test_list_util" => ["test_list_util.o",
                       "../src/list_util.o",
                       "../src/type/meta_object.o",
                       "../src/type/cell.o",
                       "../src/type/integer.o",
                       "../src/type/symbol.o",
                       "../src/type/type.o"],

  "type/test_integer" => ["type/test_integer.o",
                          "../src/type/meta_object.o",
                          "../src/type/integer.o",
                          "../src/type/type.o"],

  "type/test_symbol" => ["type/test_symbol.o",
                         "../src/type/meta_object.o",
                         "../src/type/symbol.o",
                         "../src/type/type.o"],

  "type/test_cell" =>  ["type/test_cell.o",
                        "../src/type/meta_object.o",
                        "../src/type/cell.o",
                        "../src/type/dummy.o",
                        "../src/type/type.o"],

  "type/test_form" =>  ["type/test_form.o",
                        "../src/list_util.o",
                        "../src/type/meta_object.o",
                        "../src/type/form.o",
                        "../src/type/cell.o",
                        "../src/type/dummy.o",
                        "../src/type/type.o"],

}



task :all => ["clean", *TESTS.keys]
task :default => "run"

task :run => "sample" do
  puts "---- run ----"
  sh "./sample.out"
end

task :clean do
  puts "---- clean ----"
  sh "rm -f ./*.a"
  sh "rm -f ./*.o ./type/*.o"
  sh "rm -f ./*.out ./type/*.out"
  sh "rm -f ../src/*.o ../src/type/*.o"
end

file "gtest_build" do
  puts "--- build gtest ----"
  sh "mkdir gtest_build"
  Dir.chdir("gtest_build") do
    sh "cmake ../#{GTEST_DIR}"
    sh "make gtest gtest_main"
  end
end

file "libgtest.a" => "gtest_build" do
  sh "cp ./gtest_build/libgtest.a ./"
end

file "libgtest_main.a" => "gtest_build" do
  sh "cp ./gtest_build/libgtest_main.a ./"
end

rule ".o" => ".cc" do |t|
  sh "#{CPP_COMPILER} -I#{GTEST_DIR}/include -I#{SRC_DIR} -c #{t.source} -o #{t.name} -g"
end

rule %r{^\.\.\/src\/((.+)\/)*(.+)\.o} => "%X.c" do |t|
  sh "#{C_COMPILER} -I#{GTEST_DIR}/include -I#{SRC_DIR} -c #{t.source} -o #{t.name} -g"
end

TESTS.each do |key, val|
  desc "run #{key} test"
  file key => [val, LIB].flatten do |t|
    sh "#{CPP_COMPILER} -pthread -o #{t.name}.out #{t.prerequisites.join(' ')} -g"
    sh "./#{t.name}.out"
  end
end

